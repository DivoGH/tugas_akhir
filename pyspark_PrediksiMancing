from pyspark.sql import SparkSession
from pyspark.ml.feature import VectorAssembler
from pyspark.ml.regression import LinearRegression
from pyspark.ml import Pipeline
from pyspark.ml.evaluation import RegressionEvaluator
import streamlit as st
from PIL import Image

# Inisialisasi SparkSession
spark = SparkSession.builder.appName("PrediksiMemancing").getOrCreate()

img = Image.open('upb.png')
st.image(img, width=260)
st.title('Prediksi Memancing')

# Load data CSV ke DataFrame PySpark
data1 = spark.read.csv('PrediksiMancing.csv', header=True, inferSchema=True)

# Seleksi kolom yang diperlukan
data1 = data1.select('Umpan', 'Jam', 'Ikan')

# Menggunakan VectorAssembler untuk menggabungkan fitur menjadi satu kolom
assembler = VectorAssembler(inputCols=['Umpan', 'Jam'], outputCol='features')
data1 = assembler.transform(data1)

# Membagi data menjadi train dan test
train_data, test_data = data1.randomSplit([0.8, 0.2], seed=1234)

# Membuat model Linear Regression
lr = LinearRegression(featuresCol='features', labelCol='Ikan')
pipeline = Pipeline(stages=[assembler, lr])
model = pipeline.fit(train_data)

# Interaksi dengan pengguna untuk mendapatkan input
ip_1 = st.number_input("Masukan Jumlah Umpan 1-20 Umpan", 0)
ip_2 = st.number_input("Masukan Jam Mancing 1-4 Jam", 0)

# Membuat DataFrame untuk data input
input_data = spark.createDataFrame([(ip_1, ip_2)], ['Umpan', 'Jam'])

# Transformasi input menggunakan model
result = model.transform(input_data)

# Mengambil hasil prediksi
prediction = result.select('prediction').collect()[0][0]

if st.button("Cek Hasil Tangkapan Ikan"):
    st.success(f"Prediksi Hasil Tangkapan Kamu adalah = {prediction} Ikan")
